{"ast":null,"code":"var _jsxFileName = \"C:\\\\Auth\\\\Institute-Food-Review-System-menu-team\\\\Institute-Food-Review-System-menu-team\\\\frontend\\\\src\\\\Components\\\\MessMenu\\\\UpdateMenu.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Navbar from \"../Navbar\";\nimport { Redirect } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\nconst ItemsTime = ['Breakfast', 'Lunch', 'Snacks', 'Dinner'];\nexport default function UpdateMenu() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [data, setData] = useState({\n    fooditem: \"\",\n    timing: \"\",\n    day: \"\"\n  });\n  const [redirect, setRedirect] = useState(false);\n  useEffect(() => {\n    let token = sessionStorage.getItem(\"Token\");\n\n    if (token) {} else {\n      setRedirect(true);\n    }\n\n    fetch(process.env.REACT_APP_BACKEND + \"/menu/menu/\" + id, {\n      method: \"GET\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(fetchedata => {\n      console.log(fetchedata);\n      setData({ ...data,\n        fooditem: fetchedata[0].fooditem,\n        timing: fetchedata[0].timing,\n        day: fetchedata[0].day\n      });\n    }).catch(err => console.log(err));\n  }, [id]);\n\n  const InputData = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setData(preValue => {\n      return { ...preValue,\n        [name]: value\n      };\n    });\n  };\n\n  const SubmitHandle = e => {\n    e.preventDefault();\n    console.log(data); // fetch(process.env.REACT_APP_BACKEND + \"/form/form/\", {\n    //     method: 'PUT',\n    //     headers: {\n    //         'Accept': 'application/json',\n    //         'Content-Type': 'application/json',\n    //     },\n    //     body: JSON.stringify(data)\n    // }).then(res => res.json())\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), redirect && /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"mainsectionreview\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"page-wrapper p-t-180 p-b-100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"wrapper wrapper--w960\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card card-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                class: \"title\",\n                children: \"Update Form\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: SubmitHandle,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-control-label text-muted\",\n                    children: \"foodItem\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: \"FoodItem\",\n                    name: \"fooditem\",\n                    value: data.fooditem,\n                    onChange: InputData\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 37\n                }, this), weekdays.map((val, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-check form-check-inline\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"radio-simple\",\n                      type: \"radio\",\n                      name: \"day\",\n                      onChange: InputData,\n                      value: val\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      class: \"form-check-label\",\n                      for: \"exampleRadios1\",\n                      children: val\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 49\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 45\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 37\n                }, this), ItemsTime.map((val, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-check form-check-inline\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"radio-simple\",\n                      type: \"radio\",\n                      name: \"timing\",\n                      onChange: InputData,\n                      value: val\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      class: \"form-check-label\",\n                      for: \"exampleRadios1\",\n                      children: val\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 49\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 45\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn-block btn-color\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UpdateMenu, \"924NOhihvXPOuh95getNjYOaTt0=\", false, function () {\n  return [useParams];\n});\n\n_c = UpdateMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateMenu\");","map":{"version":3,"sources":["C:/Auth/Institute-Food-Review-System-menu-team/Institute-Food-Review-System-menu-team/frontend/src/Components/MessMenu/UpdateMenu.js"],"names":["useEffect","useState","useParams","Navbar","Redirect","weekdays","ItemsTime","UpdateMenu","id","data","setData","fooditem","timing","day","redirect","setRedirect","token","sessionStorage","getItem","fetch","process","env","REACT_APP_BACKEND","method","headers","then","res","json","fetchedata","console","log","catch","err","InputData","e","name","value","target","preValue","SubmitHandle","preventDefault","map","val","index"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Navbar from \"../Navbar\";\r\nimport { Redirect } from \"react-router\";\r\nconst weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\nconst ItemsTime = ['Breakfast', 'Lunch', 'Snacks', 'Dinner'];\r\n\r\nexport default function UpdateMenu() {\r\n    const { id } = useParams();\r\n    const [data, setData] = useState({\r\n        fooditem: \"\",\r\n        timing: \"\",\r\n        day: \"\"\r\n    })\r\n    const [redirect , setRedirect] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let token = sessionStorage.getItem(\"Token\");\r\n        if (token) {\r\n\r\n        } else {\r\n            setRedirect(true);\r\n        }\r\n\r\n        fetch(process.env.REACT_APP_BACKEND + \"/menu/menu/\" + id, {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(fetchedata => {\r\n                console.log(fetchedata)\r\n                setData({\r\n                    ...data,\r\n                    fooditem: fetchedata[0].fooditem,\r\n                    timing: fetchedata[0].timing,\r\n                    day: fetchedata[0].day\r\n                })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, [id])\r\n\r\n    const InputData = (e) => {\r\n        const {name , value} = e.target;\r\n        setData((preValue) => {\r\n            return {\r\n                ...preValue,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const SubmitHandle = (e) =>{\r\n        e.preventDefault();\r\n        console.log(data);\r\n        // fetch(process.env.REACT_APP_BACKEND + \"/form/form/\", {\r\n        //     method: 'PUT',\r\n        //     headers: {\r\n        //         'Accept': 'application/json',\r\n        //         'Content-Type': 'application/json',\r\n        //     },\r\n        //     body: JSON.stringify(data)\r\n        // }).then(res => res.json())\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            {redirect && <Redirect to=\"/\" />}\r\n            <section className=\"mainsectionreview\">\r\n                <div class=\"page-wrapper p-t-180 p-b-100\">\r\n                    <div class=\"wrapper wrapper--w960\">\r\n                        <div class=\"card card-2\">\r\n                            <div class=\"card-body\">\r\n                                <h2 class=\"title\">Update Form</h2>\r\n                                <form onSubmit={SubmitHandle}>\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"form-control-label text-muted\">foodItem</label>\r\n                                        <input type=\"text\"\r\n                                            placeholder=\"FoodItem\"\r\n                                            name=\"fooditem\"\r\n                                            value={data.fooditem}\r\n                                            onChange={InputData} />\r\n                                    </div>\r\n                                    {weekdays.map((val , index) => {\r\n                                        return (\r\n                                            <div key={index} className=\"form-check form-check-inline\">\r\n                                                <input\r\n                                                    className=\"radio-simple\"\r\n                                                    type=\"radio\"\r\n                                                    name=\"day\"\r\n                                                    onChange={InputData}\r\n                                                    value={val} />\r\n                                                <label class=\"form-check-label\" for=\"exampleRadios1\">\r\n                                                    {val}\r\n                                                </label>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                    <br></br>\r\n                                    {ItemsTime.map((val , index) => {\r\n                                        return (\r\n                                            <div key={index} className=\"form-check form-check-inline\">\r\n                                                <input\r\n                                                    className=\"radio-simple\"\r\n                                                    type=\"radio\"\r\n                                                    name=\"timing\"\r\n                                                    onChange={InputData}\r\n                                                    value={val} />\r\n                                                <label class=\"form-check-label\" for=\"exampleRadios1\">\r\n                                                    {val}\r\n                                                </label>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                    \r\n                                    <button type=\"submit\" className=\"btn-block btn-color\">\r\n                                        Submit\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}